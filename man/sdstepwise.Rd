% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stepwise_regression.R
\name{sdstepwise}
\alias{sdstepwise}
\title{The main function for stepwise regression in sex-dimorphic mapping.}
\usage{
sdstepwise(summa, LD, p_cutoff = 5e-08, collinear = 0.9, ncore = 10)
}
\arguments{
\item{summa}{A data frame containing summary statistics of SNPs for marginal common and sex-dimorphic effects, including columns such as `SNP`, `Beta`, `Se`, `Z`, `N`, and `p`.
These summary statistics can be derived using the sex-stratified GWAS summary statistics of males and females. The names of SNP with marginal effects are prefixed with "S*".}

\item{LD}{A 2p * 2p matrix. It represents pairwise correlations among SNPs with both common and sex-dimorphic effects.}

\item{p_cutoff}{A numeric value specifying the p-value threshold for selecting significant SNPs in the stepwise regression process. Default is 5e-8.}

\item{collinear}{A numeric value specifying the maximum allowable collinearity (1 - 1/diag(inv_sel)) among selected SNPs. Default is 0.9.}

\item{ncore}{An integer specifying the number of cores to use for parallel processing. Default is 10.}
}
\value{
A data frame containing information about the selected SNPs, including the following columns:
\item{b_c}{The effect size estimates of selected SNPs in the jointly fitted model.}
\item{se_c}{The standard errors of the effect size estimates.}
\item{p_c}{The p-values of selected SNPs in the jointly fitted model.}
\item{LD_r}{The pairwise LD values among selected SNPs.}
\item{sig}{Indicator of significance for each SNP (1 if `p_c < 5e-8`, 0 otherwise).}

If no significant SNPs are identified, the function returns `NULL`.
}
\description{
The stepwise regression extends the standard stepwise selection procedure in the COJO framework to fine-map sex-dimorphic SNPs.
}
\examples{
library(sdSuSiE)
data(GWAS_M)
data(GWAS_F)
data(LD_M)
data(LD_F)
SNP = GWAS_M$SNP
Z = (sqrt(GWAS_M$N - 1) * GWAS_M$Z + sqrt(GWAS_F$N - 1) * GWAS_F$Z) / sqrt(GWAS_M$N + GWAS_F$N - 1)
N = round(GWAS_M$N + GWAS_F$N)
Beta = Z / sqrt(N - 1)
Se = 1 / sqrt(N - 1)
data1 = data.frame(SNP, Beta, Se, Z, N)
SNP = paste0("S*", SNP)
Z = (-sqrt(GWAS_M$N - 1) * GWAS_M$Z + sqrt(GWAS_F$N - 1) * GWAS_F$Z) / sqrt(GWAS_M$N + GWAS_F$N - 1)
N = round(GWAS_M$N + GWAS_F$N)
Beta = Z / sqrt(N - 1)
Se = 1 / sqrt(N - 1)
data2 = data.frame(SNP, Beta, Se, Z, N)
data = rbind(data1, data2)
data$p = pchisq((data$Beta/data$Se)^2, df = 1, lower.tail = FALSE)
N_M = round(median(GWAS_M$N))
N_F = round(median(GWAS_F$N))
N = N_M + N_F
V1 = (N_M-1)*LD_M + (N_F-1)*LD_F
V2 = (-1)*(N_M-1)*LD_M + (N_F-1)*LD_F
LD = rbind(cbind(V1,V2),cbind(V2,V1)) / (N-1)
res = sdstepwise(data, LD, ncore = 1)
}
